import{u as t}from"./useMutation-CNNl5TnA.js";import{$ as n}from"./index-XzM8Cj3c.js";const o=async e=>{try{return(await n.post("admin/banners/createBanners",e))?.data}catch(r){throw console.error("Failed to Create banners"),r}},a=async e=>{try{return(await n.put("admin/banners/updateBanners",e))?.data}catch(r){throw console.error("Failed to update the banners"),r}},u=async e=>{try{return(await n.post("admin/banners/getVendorVenueList",e))?.data}catch(r){throw console.error("Failed to fetch vendor to venue list"),r}},i=async()=>{try{return(await n.get("admin/banners/getCustomCityList"))?.data}catch(e){throw console.error("Failed to fetch custom city list"),e}},d=()=>t({mutationKey:["createBanner"],mutationFn:e=>{if(!e)throw new Error("Payload is required to create a venue");return o(e)},onSuccess:e=>{console.log("banner created successfully",e)},onError:e=>{console.error("Error creating banner",e)}}),p=()=>t({mutationKey:["updateBanner"],mutationFn:e=>{if(!e)throw new Error("Payload is required to update the banner");return a(e)},onSuccess:e=>{console.log("banner updated successfully",e)},onError:e=>{console.error("Error updated banner",e)}});export{p as a,u as b,i as f,d as u};
